name: SuperLinter

# Run workflow on every push and pull request
on: [push, pull_request]

jobs:
  # Linting job
  super-lint:
    name: Lint Code Base
    runs-on: ubuntu-latest # Use the latest Ubuntu environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # Clone the repo into the workflow runner
        with:
          fetch-depth: 0 # Fetch entire Git history (needed for linters)

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_BLACK: true # Python Black validation
          VALIDATE_JAVASCRIPT_ES: true # JavaScript ES validation
          VALIDATE_ALL_CODEBASE: false # # Lint only changed files
          LOG_LEVEL: DEBUG # Show debug logging

  # Pytest job        
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install requirements for all services
          pip install -r backend/reviewcollector/requirements.txt
          pip install -r backend/productcomparator/requirements.txt
          pip install -r backend/sentimentanalyzer/requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          cd backend
          pytest tests/test_reviewcollector.py tests/test_productcomparator.py tests/test_sentimentanalyzer.py
        env:
          FIREBASE_CREDENTIALS: '{"type":"service_account","project_id":"test-project"}'

  # Deploy product comparator service
  deploy-product-comparator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy Product Comparator Service
        run: |
          cd backend/productcomparator
          git init
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/sentimentor-productcomparator.git
          git add .
          git commit -m "Deploy product comparator from CI"
          git push heroku master --force

  # Deploy sentiment analyzer service
  deploy-sentiment-analyzer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy Sentiment Analyzer Service
        run: |
          cd backend/sentimentanalyzer
          git init
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/sentimentor-sentimentanalyzer.git
          git add .
          git commit -m "Deploy sentiment analyzer from CI"
          git push heroku master --force

  # Deploy review collector service
  deploy-review-collector:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy Review Collector Service
        run: |
          cd backend/reviewcollector
          git init
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/sentimentor-reviewcollector.git
          git add .
          git commit -m "Deploy review collector from CI"
          git push heroku master --force

  # Deploy frontend app
  deploy-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy Full App to Heroku
        run: |
          cd frontend
          git init
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/sentimentor.git
          git add .
          git commit -m "Deploy frontend from CI"
          git push heroku master --force
